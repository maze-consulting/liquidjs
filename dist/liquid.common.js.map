{"version":3,"file":"liquid.common.js","sources":["../src/util/underscore.ts","../src/parser/lexical.ts","../src/util/error.ts","../src/util/assert.ts","../src/liquid-options.ts","../src/scope/block-mode.ts","../src/scope/scope.ts","../src/scope/scopes.ts","../src/util/promise.ts","../src/parser/template.ts","../src/parser/whitespace-ctrl.ts","../src/parser/token.ts","../src/parser/html-token.ts","../src/parser/delimited-token.ts","../src/parser/tag-token.ts","../src/parser/output-token.ts","../src/parser/tokenizer.ts","../src/render/render.ts","../src/render/syntax.ts","../src/template/tag/hash.ts","../src/template/template.ts","../src/template/tag/tag.ts","../src/template/filter.ts","../src/parser/parse-stream.ts","../src/template/value.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/include.ts","../src/builtin/tags/section.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/tags/index.ts","../src/builtin/filters/html.ts","../src/builtin/filters/string.ts","../src/builtin/filters/math.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/util/strftime.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/builtin/filters/index.ts","../src/liquid.ts"],"sourcesContent":["const toStr = Object.prototype.toString\nconst arrToStr = Array.prototype.toString\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any) {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any) {\n  return typeof value === 'function'\n}\n\nexport function promisify (fn) {\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err, result) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  if (isNil(value)) return ''\n  if (isFunction(value.to_liquid)) return stringify(value.to_liquid())\n  if (isFunction(value.toLiquid)) return stringify(value.toLiquid())\n  if (isFunction(value.to_s)) return value.to_s()\n  if ([toStr, arrToStr].indexOf(value.toString) > -1) return defaultToString(value)\n  if (isFunction(value.toString)) return value.toString()\n  return toStr.call(value)\n}\n\nfunction defaultToString (value: any): string {\n  const cache = []\n  return JSON.stringify(value, (key, value) => {\n    if (isObject(value)) {\n      if (cache.indexOf(value) !== -1) {\n        return\n      }\n      cache.push(value)\n    }\n    return value\n  })\n}\n\nexport function create<T1 extends object, T2 extends T1 = T1> (proto: T1): T2 {\n  return Object.create(proto)\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): boolean {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\nexport function isError (value: any): boolean {\n  const signature = toStr.call(value)\n  // [object XXXError]\n  return signature.substr(-6, 5) === 'Error' ||\n        (typeof value.message === 'string' && typeof value.name === 'string')\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn (object, iteratee: ((val: any, key: string, obj: object) => boolean | void)) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\n/*\n * Assigns own enumerable string keyed properties of source objects to the destination object.\n * Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * Note: This method mutates object and is loosely based on Object.assign.\n *\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @return {Object} Returns object.\n */\nexport function assign (obj: object, ...srcs: object[]): object {\n  obj = isObject(obj) ? obj : {}\n  srcs.forEach(src => binaryAssign(obj, src))\n  return obj\n}\n\nfunction binaryAssign (target: object, src: object): object {\n  for (const key in src) if (src.hasOwnProperty(key)) target[key] = src[key]\n  return target\n}\n\nexport function last (arr: any[]): any {\n  return arr[arr.length - 1]\n}\n\nexport function uniq (arr: any[]): any[] {\n  const u = {}\n  const a = []\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    if (u.hasOwnProperty(arr[i])) {\n      continue\n    }\n    a.push(arr[i])\n    u[arr[i]] = 1\n  }\n  return a\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): boolean {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\n/*\n * A function to create flexibly-numbered lists of integers,\n * handy for each and map loops. start, if omitted, defaults to 0; step defaults to 1.\n * Returns a list of integers from start (inclusive) to stop (exclusive),\n * incremented (or decremented) by step, exclusive.\n * Note that ranges that stop before they start are considered to be zero-length instead of\n * negative â€” if you'd like a negative range, use a negative step.\n */\nexport function range (start: number, stop?: number, step?: number) {\n  if (arguments.length === 1) {\n    stop = start\n    start = 0\n  }\n  step = step || 1\n\n  const arr = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch: string = ' ') {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = ch + str\n  return str\n}\n","// quote related\nconst singleQuoted = /'[^']*'/\nconst doubleQuoted = /\"[^\"]*\"/\nexport const quoted = new RegExp(`${singleQuoted.source}|${doubleQuoted.source}`)\nexport const quoteBalanced = new RegExp(`(?:${quoted.source}|[^'\"])*`)\n\n// basic types\nexport const integer = /-?\\d+/\nexport const number = /-?\\d+\\.?\\d*|\\.?\\d+/\nexport const bool = /true|false/\n\n// property access\nexport const identifier = /[\\w-]+[?]?/\nexport const subscript = new RegExp(`\\\\[(?:${quoted.source}|[\\\\w-\\\\.]+)\\\\]`)\nexport const literal = new RegExp(`(?:${quoted.source}|${bool.source}|${number.source})`)\nexport const variable = new RegExp(`${identifier.source}(?:\\\\.${identifier.source}|${subscript.source})*`)\n\n// range related\nexport const rangeLimit = new RegExp(`(?:${variable.source}|${number.source})`)\nexport const range = new RegExp(`\\\\(${rangeLimit.source}\\\\.\\\\.${rangeLimit.source}\\\\)`)\nexport const rangeCapture = new RegExp(`\\\\((${rangeLimit.source})\\\\.\\\\.(${rangeLimit.source})\\\\)`)\n\nexport const value = new RegExp(`(?:${variable.source}|${literal.source}|${range.source})`)\n\n// hash related\nexport const hash = new RegExp(`(?:${identifier.source})\\\\s*:\\\\s*(?:${value.source})`)\nexport const hashCapture = new RegExp(`(${identifier.source})\\\\s*:\\\\s*(${value.source})`, 'g')\n\n// full match\nexport const tagLine = new RegExp(`^\\\\s*(${identifier.source})\\\\s*([\\\\s\\\\S]*?)\\\\s*$`)\nexport const literalLine = new RegExp(`^${literal.source}$`, 'i')\nexport const variableLine = new RegExp(`^${variable.source}$`)\nexport const numberLine = new RegExp(`^${number.source}$`)\nexport const boolLine = new RegExp(`^${bool.source}$`, 'i')\nexport const quotedLine = new RegExp(`^${quoted.source}$`)\nexport const rangeLine = new RegExp(`^${rangeCapture.source}$`)\nexport const integerLine = new RegExp(`^${integer.source}$`)\n\n// filter related\nexport const valueDeclaration = new RegExp(`(?:${identifier.source}\\\\s*:\\\\s*)?${value.source}`)\nexport const valueList = new RegExp(`${valueDeclaration.source}(\\\\s*,\\\\s*${valueDeclaration.source})*`)\nexport const filter = new RegExp(`${identifier.source}(?:\\\\s*:\\\\s*${valueList.source})?`, 'g')\nexport const filterCapture = new RegExp(`(${identifier.source})(?:\\\\s*:\\\\s*(${valueList.source}))?`)\nexport const filterLine = new RegExp(`^${filterCapture.source}$`)\n\nexport const operators = [\n  /\\s+or\\s+/,\n  /\\s+and\\s+/,\n  /==|!=|<=|>=|<|>|\\s+contains\\s+/\n]\n\nexport function isInteger (str) {\n  return integerLine.test(str)\n}\n\nexport function isLiteral (str) {\n  return literalLine.test(str)\n}\n\nexport function isRange (str) {\n  return rangeLine.test(str)\n}\n\nexport function isVariable (str) {\n  return variableLine.test(str)\n}\n\nexport function matchValue (str) {\n  return value.exec(str)\n}\n\nexport function parseLiteral (str) {\n  let res = str.match(numberLine)\n  if (res) {\n    return Number(str)\n  }\n  res = str.match(boolLine)\n  if (res) {\n    return str.toLowerCase() === 'true'\n  }\n  res = str.match(quotedLine)\n  if (res) {\n    return str.slice(1, -1)\n  }\n  throw new TypeError(`cannot parse '${str}' as literal`)\n}\n","import * as _ from './underscore'\nimport Token from 'src/parser/token'\n\nfunction captureStack () {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\nabstract class LiquidError {\n  name: string\n  message: string\n  stack: string\n  private line: string\n  private file: string\n  private input: string\n  private token: Token\n  private originalError: Error\n  constructor (err, token) {\n    this.input = token.input\n    this.line = token.line\n    this.file = token.file\n    this.originalError = err\n    this.token = token\n  }\n  captureStackTrace (obj) {\n    this.name = obj.constructor.name\n\n    captureStack.call(obj)\n    const err = this.originalError\n    const context = mkContext(this.input, this.line)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + context +\n      '\\n' + (this.stack || this.message) +\n        (err.stack ? '\\nFrom ' + err.stack : '')\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  constructor (message, token) {\n    super({ message }, token)\n    super.captureStackTrace(this)\n  }\n}\nTokenizationError.prototype = _.create(Error.prototype) as any\nTokenizationError.prototype.constructor = TokenizationError\n\nexport class ParseError extends LiquidError {\n  constructor (err, token) {\n    super(err, token)\n    _.assign(this, err)\n    super.captureStackTrace(this)\n  }\n}\nParseError.prototype = _.create(Error.prototype) as any\nParseError.prototype.constructor = ParseError\n\nexport class RenderError extends LiquidError {\n  constructor (err, tpl) {\n    super(err, tpl.token)\n    _.assign(this, err)\n    super.captureStackTrace(this)\n  }\n}\nRenderError.prototype = _.create(Error.prototype) as any\nRenderError.prototype.constructor = RenderError\n\nexport class RenderBreakError {\n  message: string\n  resolvedHTML: string\n  constructor (message) {\n    captureStack.call(this)\n    this.message = message + ''\n  }\n}\nRenderBreakError.prototype = _.create(Error.prototype) as any\nRenderBreakError.prototype.constructor = RenderBreakError\n\nexport class AssertionError {\n  message: string\n  constructor (message) {\n    captureStack.call(this)\n    this.message = message + ''\n  }\n}\nAssertionError.prototype = _.create(Error.prototype) as any\nAssertionError.prototype.constructor = AssertionError\n\nfunction mkContext (input, targetLine) {\n  const lines = input.split('\\n')\n  const begin = Math.max(targetLine - 2, 1)\n  const end = Math.min(targetLine + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === targetLine) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg, token) {\n  msg = msg || ''\n  if (token.file) {\n    msg += ', file:' + token.file\n  }\n  if (token.line) {\n    msg += ', line:' + token.line\n  }\n  return msg\n}\n","import { AssertionError } from './error'\n\nexport default function (predicate: any, message?: string) {\n  if (!predicate) {\n    message = message || `expect ${predicate} to be true`\n    throw new AssertionError(message)\n  }\n}\n","export interface LiquidOptions {\n  /** `root` is a directory or an array of directories to resolve layouts and includes, as well as the filename passed in when calling `.renderFile()`. If an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[]\n  /** `extname` is used to lookup the template file when filepath doesn't include an extension name. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string\n  /** `cache` indicates whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean\n  /** `dynamicPartials`: if set, treat `<filepath>` parameter in `{%include filepath %}`, `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean\n  /** `strict_filters` is used to enable strict filter existence. If set to `false`, undefined filters will be rendered as empty string. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strict_filters?: boolean  // eslint-disable-line\n  /** `strict_variables` is used to enable strict variable derivation.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strict_variables?: boolean  // eslint-disable-line\n  /** `trim_tag_right` is used to strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trim_tag_right?: boolean  // eslint-disable-line\n  /** `trim_tag_left` is similar to `trim_tag_right`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trim_tag_left?: boolean   // eslint-disable-line\n  /** ``trim_value_right` is used to strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trim_value_right?: boolean  // eslint-disable-line\n  /** `trim_value_left` is similar to `trim_value_right`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trim_value_left?: boolean // eslint-disable-line\n  /** `greedy` is used to specify whether `trim_left`/`trim_right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean\n}\n\nexport const defaultOptions: LiquidOptions = {\n  root: ['.'],\n  cache: false,\n  extname: '',\n  dynamicPartials: true,\n  trim_tag_right: false,\n  trim_tag_left: false,\n  trim_value_right: false,\n  trim_value_left: false,\n  greedy: true,\n  strict_filters: false,\n  strict_variables: false\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import * as _ from '../util/underscore'\nimport * as lexical from '../parser/lexical'\nimport assert from '../util/assert'\nimport { LiquidOptions, defaultOptions } from '../liquid-options'\nimport BlockMode from './block-mode'\n\nexport default class Scope {\n  opts: LiquidOptions\n  contexts: Array<object>\n  blocks: object = {}\n  blockMode: BlockMode = BlockMode.OUTPUT\n  constructor (ctx: object = {}, opts: LiquidOptions = defaultOptions) {\n    this.opts = _.assign({\n      dynamicPartials: true,\n      strict_variables: false,\n      strict_filters: false,\n      root: []\n    }, opts)\n    this.contexts = [ctx || {}]\n  }\n  getAll () {\n    return this.contexts.reduce((ctx, val) => _.assign(ctx, val), _.create(null))\n  }\n  get (path: string): any {\n    const paths = this.propertyAccessSeq(path)\n    const scope = this.findContextFor(paths[0]) || _.last(this.contexts)\n    return paths.reduce((value, key) => this.readProperty(value, key), scope)\n  }\n  set (path: string, v: any): void {\n    const paths = this.propertyAccessSeq(path)\n    let scope = this.findContextFor(paths[0]) || _.last(this.contexts)\n    paths.some((key, i) => {\n      if (!_.isObject(scope)) {\n        return true\n      }\n      if (i === paths.length - 1) {\n        scope[key] = v\n        return true\n      }\n      if (undefined === scope[key]) {\n        scope[key] = {}\n      }\n      scope = scope[key]\n    })\n  }\n  unshift (ctx: object): any {\n    return this.contexts.unshift(ctx)\n  }\n  push (ctx: object): any {\n    return this.contexts.push(ctx)\n  }\n  pop (ctx?: object): object {\n    if (!arguments.length) {\n      return this.contexts.pop()\n    }\n    const i = this.contexts.findIndex(scope => scope === ctx)\n    if (i === -1) {\n      throw new TypeError('scope not found, cannot pop')\n    }\n    return this.contexts.splice(i, 1)[0]\n  }\n  findContextFor (key: string, filter: ((conttext: object) => boolean) = () => true) {\n    for (let i = this.contexts.length - 1; i >= 0; i--) {\n      const candidate = this.contexts[i]\n      if (!filter(candidate)) continue\n      if (key in candidate) {\n        return candidate\n      }\n    }\n    return null\n  }\n  readProperty (obj, key) {\n    let val\n    if (_.isNil(obj)) {\n      val = undefined\n    } else {\n      obj = toLiquid(obj)\n      val = key === 'size' ? readSize(obj) : obj[key]\n      if (_.isFunction(obj.liquid_method_missing)) {\n        val = obj.liquid_method_missing(key)\n      }\n    }\n    if (_.isNil(val) && this.opts.strict_variables) {\n      throw new TypeError(`undefined variable: ${key}`)\n    }\n    return val\n  }\n\n  /*\n   * Parse property access sequence from access string\n   * @example\n   * accessSeq(\"foo.bar\")            // ['foo', 'bar']\n   * accessSeq(\"foo['bar']\")      // ['foo', 'bar']\n   * accessSeq(\"foo['b]r']\")      // ['foo', 'b]r']\n   * accessSeq(\"foo[bar.coo]\")    // ['foo', 'bar'], for bar.coo == 'bar'\n   */\n  propertyAccessSeq (str) {\n    str = String(str)\n    const seq = []\n    let name = ''\n    let j\n    let i = 0\n    while (i < str.length) {\n      switch (str[i]) {\n        case '[':\n          push()\n\n          const delemiter = str[i + 1]\n          if (/['\"]/.test(delemiter)) { // foo[\"bar\"]\n            j = str.indexOf(delemiter, i + 2)\n            assert(j !== -1, `unbalanced ${delemiter}: ${str}`)\n            name = str.slice(i + 2, j)\n            push()\n            i = j + 2\n          } else { // foo[bar.coo]\n            j = matchRightBracket(str, i + 1)\n            assert(j !== -1, `unbalanced []: ${str}`)\n            name = str.slice(i + 1, j)\n            if (!lexical.isInteger(name)) { // foo[bar] vs. foo[1]\n              name = String(this.get(name))\n            }\n            push()\n            i = j + 1\n          }\n          break\n        case '.':// foo.bar, foo[0].bar\n          push()\n          i++\n          break\n        default:// foo.bar\n          name += str[i]\n          i++\n      }\n    }\n    push()\n\n    if (!seq.length) {\n      throw new TypeError(`invalid path:\"${str}\"`)\n    }\n    return seq\n\n    function push () {\n      if (name.length) seq.push(name)\n      name = ''\n    }\n  }\n}\n\nfunction toLiquid (obj) {\n  if (_.isFunction(obj.to_liquid)) {\n    return obj.to_liquid()\n  }\n  if (_.isFunction(obj.toLiquid)) {\n    return obj.toLiquid()\n  }\n  return obj\n}\n\nfunction readSize (obj) {\n  if (!_.isNil(obj.size)) return obj.size\n  if (_.isArray(obj) || _.isString(obj)) return obj.length\n  return obj.size\n}\n\nfunction matchRightBracket (str, begin) {\n  let stack = 1 // count of '[' - count of ']'\n  for (let i = begin; i < str.length; i++) {\n    if (str[i] === '[') {\n      stack++\n    }\n    if (str[i] === ']') {\n      stack--\n      if (stack === 0) {\n        return i\n      }\n    }\n  }\n  return -1\n}\n","export class CaptureScope {}\nexport class AssignScope {}\nexport class IncrementScope {}\nexport class DecrementScope {}\n","/*\n * Call functions in serial until someone resolved.\n * @param iterable the array to iterate with.\n * @param iteratee returns a new promise.\n * The iteratee is invoked with three arguments: (value, index, iterable).\n */\nexport function anySeries (iterable, iteratee) {\n  let ret: Promise<any> = Promise.reject(new Error('init'))\n  iterable.forEach(function (item, idx) {\n    ret = ret.catch(() => iteratee(item, idx, iterable))\n  })\n  return ret\n}\n\n/*\n * Call functions in serial until someone rejected.\n * @param {Array} iterable the array to iterate with.\n * @param {Array} iteratee returns a new promise.\n * The iteratee is invoked with three arguments: (value, index, iterable).\n */\nexport function mapSeries (iterable, iteratee) {\n  let ret: Promise<any> = Promise.resolve('init')\n  const result = []\n  iterable.forEach(function (item, idx) {\n    ret = ret\n      .then(() => iteratee(item, idx, iterable))\n      .then(x => result.push(x))\n  })\n  return ret.then(() => result)\n}\n","import * as _ from '../util/underscore'\nimport * as path from 'path'\nimport { anySeries } from '../util/promise'\nimport { stat, readFile } from 'fs'\n\nexport const fs = {\n  stat: _.promisify(stat) as ((filepath: string) => Promise<object>),\n  readFile: _.promisify(readFile) as ((filepath: string, encoding: string) => Promise<string>)\n}\n\nexport async function resolve (filepath, root, options) {\n  if (!path.extname(filepath)) {\n    filepath += options.extname\n  }\n  root = options.root.concat(root || [])\n  root = _.uniq(root)\n  const paths = root.map(root => path.resolve(root, filepath))\n  return anySeries(paths, async path => {\n    try {\n      await fs.stat(path)\n      return path\n    } catch (e) {\n      e.message = `${e.code}: Failed to lookup ${filepath} in: ${root}`\n      throw e\n    }\n  })\n}\n\nexport async function read (filepath): Promise<string> {\n  return fs.readFile(filepath, 'utf8')\n}\n","import { assign } from 'src/util/underscore'\nimport DelimitedToken from 'src/parser/delimited-token'\nimport Token from 'src/parser/token'\nimport TagToken from 'src/parser/tag-token'\nimport { LiquidOptions } from 'src/liquid-options'\n\nexport default function whiteSpaceCtrl (tokens: Token[], options: LiquidOptions) {\n  options = assign({ greedy: true }, options)\n  let inRaw = false\n\n  tokens.forEach((token: Token, i: number) => {\n    if (shouldTrimLeft(token as DelimitedToken, inRaw, options)) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (token.type === 'tag' && (token as TagToken).name === 'raw') inRaw = true\n    if (token.type === 'tag' && (token as TagToken).name === 'endraw') inRaw = false\n\n    if (shouldTrimRight(token as DelimitedToken, inRaw, options)) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  })\n}\n\nfunction shouldTrimLeft (token: DelimitedToken, inRaw: boolean, options) {\n  if (inRaw) return false\n  if (token.type === 'tag') return token.trimLeft || options.trim_tag_left\n  if (token.type === 'output') return token.trimLeft || options.trim_value_left\n}\n\nfunction shouldTrimRight (token: DelimitedToken, inRaw: boolean, options) {\n  if (inRaw) return false\n  if (token.type === 'tag') return token.trimRight || options.trim_tag_right\n  if (token.type === 'output') return token.trimRight || options.trim_value_right\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || token.type !== 'html') return\n\n  const rLeft = greedy ? /\\s+$/g : /[\\t\\r ]*$/g\n  token.value = token.value.replace(rLeft, '')\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || token.type !== 'html') return\n\n  const rRight = greedy ? /^\\s+/g : /^[\\t\\r ]*\\n?/g\n  token.value = token.value.replace(rRight, '')\n}\n","export default class Token {\n  type: string\n  line: number\n  raw: string\n  input: string\n  file: string\n  value: string\n  constructor (raw, pos, input, file, line) {\n    this.line = line\n    this.raw = raw\n    this.input = input\n    this.file = file\n  }\n}\n","import Token from './token'\n\nexport default class HTMLToken extends Token {\n  constructor (str, begin, input, file, line) {\n    super(str, begin, input, file, line)\n    this.type = 'html'\n    this.value = str\n  }\n}\n","import Token from './token'\n\nexport default class DelimitedToken extends Token {\n  trimLeft: boolean\n  trimRight: boolean\n  constructor (raw, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.trimLeft = raw[2] === '-'\n    this.trimRight = raw[raw.length - 3] === '-'\n    this.value = raw.slice(this.trimLeft ? 3 : 2, this.trimRight ? -3 : -2).trim()\n  }\n}\n","import DelimitedToken from './delimited-token'\nimport { TokenizationError } from 'src/util/error'\nimport * as lexical from './lexical'\n\nexport default class TagToken extends DelimitedToken {\n  name: string\n  args: string\n  constructor (raw, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.type = 'tag'\n    const match = this.value.match(lexical.tagLine)\n    if (!match) {\n      throw new TokenizationError(`illegal tag syntax`, this)\n    }\n    this.name = match[1]\n    this.args = match[2]\n  }\n}\n","import DelimitedToken from './delimited-token'\n\nexport default class OutputToken extends DelimitedToken {\n  constructor (raw, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.type = 'output'\n  }\n}\n","import whiteSpaceCtrl from './whitespace-ctrl'\nimport HTMLToken from './html-token'\nimport TagToken from './tag-token'\nimport OutputToken from './output-token'\nimport { LiquidOptions, defaultOptions } from 'src/liquid-options'\n\nenum ParseState { HTML, OUTPUT, TAG }\n\nexport default class Tokenizer {\n  options: LiquidOptions\n  constructor (options: LiquidOptions = defaultOptions) {\n    this.options = options\n  }\n  tokenize (input: string, file?: string) {\n    const tokens = []\n    let p = 0\n    let line = 1\n    let state = ParseState.HTML\n    let buffer = ''\n    let bufferBegin = 0\n\n    while (p < input.length) {\n      if (input[p] === '\\n') line++\n      const bin = input.substr(p, 2)\n      if (state === ParseState.HTML) {\n        if (bin === '{{' || bin === '{%') {\n          if (buffer) tokens.push(new HTMLToken(buffer, bufferBegin, input, file, line))\n          buffer = bin\n          bufferBegin = p\n          p += 2\n          state = bin === '{{' ? ParseState.OUTPUT : ParseState.TAG\n          continue\n        }\n      } else if (state === ParseState.OUTPUT && bin === '}}') {\n        buffer += '}}'\n        tokens.push(new OutputToken(buffer, bufferBegin, input, file, line))\n        p += 2\n        buffer = ''\n        bufferBegin = p\n        state = ParseState.HTML\n        continue\n      } else if (bin === '%}') {\n        buffer += '%}'\n        tokens.push(new TagToken(buffer, bufferBegin, input, file, line))\n        p += 2\n        buffer = ''\n        bufferBegin = p\n        state = ParseState.HTML\n        continue\n      }\n      buffer += input[p++]\n    }\n    if (buffer) tokens.push(new HTMLToken(buffer, bufferBegin, input, file, line))\n\n    whiteSpaceCtrl(tokens, this.options)\n    return tokens\n  }\n}\n","import { RenderBreakError, RenderError } from 'src/util/error'\nimport assert from 'src/util/assert'\n\nexport default class Render {\n  async renderTemplates (templates, scope) {\n    assert(scope, 'unable to evalTemplates: scope undefined')\n\n    let html = ''\n    for (const tpl of templates) {\n      try {\n        html += await tpl.render(scope)\n      } catch (e) {\n        if (e instanceof RenderBreakError) {\n          e.resolvedHTML = html\n          throw e\n        }\n        throw e instanceof RenderError ? e : new RenderError(e, tpl)\n      }\n    }\n    return html\n  }\n}\n","import * as lexical from '../parser/lexical'\nimport assert from '../util/assert'\n\nconst operators = {\n  '==': (l, r) => l === r,\n  '!=': (l, r) => l !== r,\n  '>': (l, r) => l !== null && r !== null && l > r,\n  '<': (l, r) => l !== null && r !== null && l < r,\n  '>=': (l, r) => l !== null && r !== null && l >= r,\n  '<=': (l, r) => l !== null && r !== null && l <= r,\n  'contains': (l, r) => {\n    if (!l) return false\n    if (typeof l.indexOf !== 'function') return false\n    return l.indexOf(r) > -1\n  },\n  'and': (l, r) => isTruthy(l) && isTruthy(r),\n  'or': (l, r) => isTruthy(l) || isTruthy(r)\n}\n\nexport function evalExp (exp, scope) {\n  assert(scope, 'unable to evalExp: scope undefined')\n  const operatorREs = lexical.operators\n  let match\n  for (let i = 0; i < operatorREs.length; i++) {\n    const operatorRE = operatorREs[i]\n    const expRE = new RegExp(`^(${lexical.quoteBalanced.source})(${operatorRE.source})(${lexical.quoteBalanced.source})$`)\n    if ((match = exp.match(expRE))) {\n      const l = evalExp(match[1], scope)\n      const op = operators[match[2].trim()]\n      const r = evalExp(match[3], scope)\n      return op(l, r)\n    }\n  }\n\n  if ((match = exp.match(lexical.rangeLine))) {\n    const low = evalValue(match[1], scope)\n    const high = evalValue(match[2], scope)\n    const range = []\n    for (let j = low; j <= high; j++) {\n      range.push(j)\n    }\n    return range\n  }\n\n  return evalValue(exp, scope)\n}\n\nexport function evalValue (str, scope) {\n  str = str && str.trim()\n  if (!str) return undefined\n\n  if (lexical.isLiteral(str)) {\n    return lexical.parseLiteral(str)\n  }\n  if (lexical.isVariable(str)) {\n    return scope.get(str)\n  }\n  throw new TypeError(`cannot eval '${str}' as value`)\n}\n\nexport function isTruthy (val) {\n  return !isFalsy(val)\n}\n\nexport function isFalsy (val) {\n  return val === false || undefined === val || val === null\n}\n","import { hashCapture } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `{% include 'head.html' foo='bar' %}`,\n *    hash['foo'] === 'bar'\n */\nexport default class Hash {\n  [key: string]: any\n  constructor (markup, scope) {\n    let match\n    hashCapture.lastIndex = 0\n    while ((match = hashCapture.exec(markup))) {\n      const k = match[1]\n      const v = match[2]\n      this[k] = evalValue(v, scope)\n    }\n  }\n}\n","import Token from 'src/parser/token'\n\nexport default class Template {\n  token: Token;\n  constructor (token) {\n    this.token = token\n  }\n}\n","import { create, stringify } from 'src/util/underscore'\nimport assert from 'src/util/assert'\nimport Scope from 'src/scope/scope'\nimport ITagImpl from './itag-impl'\nimport ITagImplOptions from './itag-impl-options'\nimport Liquid from 'src/liquid'\nimport Hash from './hash'\nimport Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport TagToken from 'src/parser/tag-token'\nimport Token from 'src/parser/token'\n\nexport default class Tag extends Template implements ITemplate {\n  name: string\n  token: TagToken\n  private impl: ITagImpl\n  static impls: { [key: string]: ITagImplOptions } = {}\n\n  constructor (token: TagToken, tokens: Token[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = Tag.impls[token.name]\n    assert(impl, `tag ${token.name} not found`)\n    this.impl = create<ITagImplOptions, ITagImpl>(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  async render (scope: Scope) {\n    const hash = new Hash(this.token.args, scope)\n    const impl = this.impl\n    if (typeof impl.render !== 'function') {\n      return ''\n    }\n    const html = await impl.render(scope, hash)\n    return stringify(html)\n  }\n  static register (name: string, tag: ITagImplOptions) {\n    Tag.impls[name] = tag\n  }\n  static clear () {\n    Tag.impls = {}\n  }\n}\n","import assert from 'src/util/assert'\nimport * as lexical from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport Scope from 'src/scope/scope'\n\ntype impl = (value: any, ...args: any[]) => any\n\nconst valueRE = new RegExp(`${lexical.value.source}`, 'g')\n\nexport default class Filter {\n  name: string\n  impl: impl\n  args: string[]\n  private static impls: {[key: string]: impl} = {}\n\n  constructor (str: string, strictFilters: boolean = false) {\n    const match = lexical.filterLine.exec(str)\n    assert(match, 'illegal filter: ' + str)\n\n    const name = match[1]\n    const argList = match[2] || ''\n    const impl = Filter.impls[name]\n    if (!impl && strictFilters) throw new TypeError(`undefined filter: ${name}`)\n\n    this.name = name\n    this.impl = impl || (x => x)\n    this.args = this.parseArgs(argList)\n  }\n  parseArgs (argList: string): string[] {\n    let match; const args = []\n    while ((match = valueRE.exec(argList.trim()))) {\n      const v = match[0]\n      const re = new RegExp(`${v}\\\\s*:`, 'g')\n      const keyMatch = re.exec(match.input)\n      const currentMatchIsKey = keyMatch && keyMatch.index === match.index\n      currentMatchIsKey ? args.push(`'${v}'`) : args.push(v)\n    }\n    return args\n  }\n  render (value: any, scope: Scope): any {\n    const args = this.args.map(arg => evalValue(arg, scope))\n    args.unshift(value)\n    return this.impl.apply(null, args)\n  }\n  static register (name, filter) {\n    Filter.impls[name] = filter\n  }\n  static clear () {\n    Filter.impls = {}\n  }\n}\n","import Token from 'src/parser/token'\nimport ITemplate from 'src/template/itemplate'\n\ntype parseToken = (token: Token, remainTokens: Array<Token>) => ITemplate\ntype eventHandler = ((arg?: Token | ITemplate) => void)\n\nexport default class ParseStream {\n  private tokens: Array<Token>\n  private handlers: {[key: string]: eventHandler} = {}\n  private stopRequested: boolean\n  private parseToken: parseToken\n\n  constructor (tokens: Array<Token>, parseToken: parseToken) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  on (name: string, cb: eventHandler) {\n    this.handlers[name] = cb\n    return this\n  }\n  trigger (event: string, arg?: Token | ITemplate) {\n    const h = this.handlers[event]\n    if (typeof h === 'function') {\n      h(arg)\n      return true\n    }\n  }\n  start () {\n    this.trigger('start')\n    let token\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (token.type === 'tag' &&\n          this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","import { evalExp } from 'src/render/syntax'\nimport * as lexical from 'src/parser/lexical'\nimport assert from 'src/util/assert'\nimport Filter from './filter'\nimport Scope from 'src/scope/scope'\n\nexport default class {\n  initial: any\n  filters: Array<any>\n  constructor (str: string, strictFilters?: boolean) {\n    let match = lexical.matchValue(str)\n    assert(match, `illegal value string: ${str}`)\n\n    const initial = match[0]\n    str = str.substr(match.index + match[0].length)\n\n    const filters = []\n    while ((match = lexical.filter.exec(str))) {\n      filters.push([match[0].trim()])\n    }\n\n    this.initial = initial\n    this.filters = filters.map(str => new Filter(str, strictFilters))\n  }\n  value (scope: Scope) {\n    return this.filters.reduce(\n      (prev, filter) => filter.render(prev, scope),\n      evalExp(this.initial, scope))\n  }\n}\n","import Value from './value'\nimport { stringify } from 'src/util/underscore'\nimport Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport Scope from 'src/scope/scope'\nimport OutputToken from 'src/parser/output-token'\n\nexport default class Output extends Template implements ITemplate {\n  value: Value\n  constructor (token: OutputToken, strictFilters?: boolean) {\n    super(token)\n    this.value = new Value(token.value, strictFilters)\n  }\n  async render (scope: Scope): Promise<string> {\n    const html = await this.value.value(scope)\n    return stringify(html)\n  }\n}\n","import Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport Token from 'src/parser/token'\n\nexport default class extends Template implements ITemplate {\n  str: string\n  constructor (token: Token) {\n    super(token)\n    this.str = token.value\n  }\n  async render (): Promise<string> {\n    return this.str\n  }\n}\n","import { ParseError } from '../util/error'\nimport Liquid from 'src/liquid'\nimport ParseStream from './parse-stream'\nimport Token from './token'\nimport TagToken from './tag-token'\nimport OutputToken from './output-token'\nimport Tag from 'src/template/tag/tag'\nimport Output from 'src/template/output'\nimport HTML from 'src/template/html'\n\nexport default class Parser {\n  liquid: Liquid\n\n  constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  parse (tokens: Array<Token>) {\n    let token\n    const templates = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  parseToken (token: Token, remainTokens: Array<Token>) {\n    try {\n      if (token.type === 'tag') {\n        return new Tag(token as TagToken, remainTokens, this.liquid)\n      }\n      if (token.type === 'output') {\n        return new Output(token as OutputToken, this.liquid.options.strict_filters)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  parseStream (tokens: Array<Token>) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { AssignScope } from 'src/scope/scopes'\n\nconst re = new RegExp(`(${identifier.source})\\\\s*=([^]*)`)\n\nexport default {\n  parse: function (token) {\n    const match = token.args.match(re)\n    assert(match, `illegal token ${token.raw}`)\n    this.key = match[1]\n    this.value = match[2]\n  },\n  render: function (scope) {\n    const ctx = new AssignScope()\n    ctx[this.key] = this.liquid.evalValue(this.value, scope)\n    scope.push(ctx)\n    return Promise.resolve('')\n  }\n}\n","import { mapSeries } from 'src/util/promise'\nimport { isString, isObject, isArray } from 'src/util/underscore'\nimport { evalExp } from 'src/render/syntax'\nimport assert from 'src/util/assert'\nimport { identifier, value, hash } from 'src/parser/lexical'\nimport { RenderBreakError } from 'src/util/error'\n\nconst re = new RegExp(`^(${identifier.source})\\\\s+in\\\\s+` +\n  `(${value.source})` +\n  `(?:\\\\s+${hash.source})*` +\n  `(?:\\\\s+(reversed))?` +\n  `(?:\\\\s+${hash.source})*$`)\n\nfunction parse (tagToken, remainTokens) {\n  const match = re.exec(tagToken.args)\n  assert(match, `illegal tag: ${tagToken.raw}`)\n  this.variable = match[1]\n  this.collection = match[2]\n  this.reversed = !!match[3]\n\n  this.templates = []\n  this.elseTemplates = []\n\n  let p\n  const stream = this.liquid.parser.parseStream(remainTokens)\n    .on('start', () => (p = this.templates))\n    .on('tag:else', () => (p = this.elseTemplates))\n    .on('tag:endfor', () => stream.stop())\n    .on('template', tpl => p.push(tpl))\n    .on('end', () => {\n      throw new Error(`tag ${tagToken.raw} not closed`)\n    })\n\n  stream.start()\n}\n\nasync function render (scope, hash) {\n  let collection = evalExp(this.collection, scope)\n\n  if (!isArray(collection)) {\n    if (isString(collection) && collection.length > 0) {\n      collection = [collection]\n    } else if (isObject(collection)) {\n      collection = Object.keys(collection).map((key) => [key, collection[key]])\n    }\n  }\n  if (!isArray(collection) || !collection.length) {\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n\n  const offset = hash.offset || 0\n  const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n  collection = collection.slice(offset, offset + limit)\n  if (this.reversed) collection.reverse()\n\n  const contexts = collection.map((item, i) => {\n    const ctx = {}\n    ctx[this.variable] = item\n    ctx['forloop'] = {\n      first: i === 0,\n      index: i + 1,\n      index0: i,\n      last: i === collection.length - 1,\n      length: collection.length,\n      rindex: collection.length - i,\n      rindex0: collection.length - i - 1\n    }\n    return ctx\n  })\n\n  let html = ''\n  let finished = false\n  await mapSeries(contexts, async context => {\n    if (finished) return\n\n    scope.push(context)\n    try {\n      html += await this.liquid.renderer.renderTemplates(this.templates, scope)\n    } catch (e) {\n      if (e instanceof RenderBreakError) {\n        html += e.resolvedHTML\n        if (e.message === 'break') {\n          finished = true\n        }\n      } else throw e\n    }\n    scope.pop(context)\n  })\n  return html\n}\n\nexport default { parse, render }\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope } from 'src/scope/scopes'\nimport TagToken from 'src/parser/tag-token'\nimport Token from 'src/parser/token'\nimport Scope from 'src/scope/scope'\n\nconst re = new RegExp(`(${identifier.source})`)\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: Token[]) {\n    const match = tagToken.args.match(re)\n    assert(match, `${tagToken.args} not valid identifier`)\n\n    this.variable = match[1]\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', tpl => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: async function (scope: Scope) {\n    const html = await this.liquid.renderer.renderTemplates(this.templates, scope)\n    const ctx = new CaptureScope()\n    ctx[this.variable] = html\n    scope.push(ctx)\n  }\n}\n","import { evalExp } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.cond = tagToken.args\n    this.cases = []\n    this.elseTemplates = []\n\n    let p = []\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', token => {\n        this.cases.push({\n          val: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    for (let i = 0; i < this.cases.length; i++) {\n      const branch = this.cases[i]\n      const val = evalExp(branch.val, scope)\n      const cond = evalExp(this.cond, scope)\n      if (val === cond) {\n        return this.liquid.renderer.renderTemplates(branch.templates, scope)\n      }\n    }\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","export default {\n  parse: function (tagToken, remainTokens) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', token => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  }\n}\n","import assert from 'src/util/assert'\nimport { value, quotedLine } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /[^\\s,]+/\nconst withRE = new RegExp(`with\\\\s+(${value.source})`)\n\nexport default {\n  parse: function (token) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticValue = match[0]\n    }\n\n    match = value.exec(token.args)\n    if (match) {\n      this.value = match[0]\n    }\n\n    match = withRE.exec(token.args)\n    if (match) {\n      this.with = match[1]\n    }\n  },\n  render: async function (scope, hash) {\n    let filepath\n    if (scope.opts.dynamicPartials) {\n      if (quotedLine.exec(this.value)) {\n        const template = this.value.slice(1, -1)\n        filepath = await this.liquid.parseAndRender(template, scope.getAll(), scope.opts)\n      } else {\n        filepath = evalValue(this.value, scope)\n      }\n    } else {\n      filepath = this.staticValue\n    }\n    assert(filepath, `cannot include with empty filename`)\n\n    const originBlocks = scope.blocks\n    const originBlockMode = scope.blockMode\n\n    scope.blocks = {}\n    scope.blockMode = BlockMode.OUTPUT\n    if (this.with) {\n      hash[filepath] = evalValue(this.with, scope)\n    }\n    const templates = await this.liquid.getTemplate(filepath, scope.opts.root)\n    scope.push(hash)\n    const html = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    scope.blocks = originBlocks\n    scope.blockMode = originBlockMode\n    return html\n  }\n}\n","import assert from 'src/util/assert'\nimport { value, quotedLine } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /[^\\s,]+/\nconst withRE = new RegExp(`with\\\\s+(${value.source})`)\n\nexport default {\n  parse: function (token) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticValue = match[0]\n    }\n\n    match = value.exec(token.args)\n    if (match) {\n      this.value = match[0]\n    }\n\n    match = withRE.exec(token.args)\n    if (match) {\n      this.with = match[1]\n    }\n  },\n  render: async function (scope, hash) {\n    let filepath\n    if (scope.opts.dynamicPartials) {\n      if (quotedLine.exec(this.value)) {\n        const template = this.value.slice(1, -1)\n        filepath = await this.liquid.parseAndRender(template, scope.getAll(), scope.opts)\n      } else {\n        filepath = evalValue(this.value, scope)\n      }\n    } else {\n      filepath = this.staticValue\n    }\n    assert(filepath, `cannot include with empty filename`)\n\n    const originBlocks = scope.blocks\n    const originBlockMode = scope.blockMode\n\n    scope.blocks = {}\n    scope.blockMode = BlockMode.OUTPUT\n    if (this.with) {\n      hash[filepath] = evalValue(this.with, scope)\n    }\n    const templates = await this.liquid.getTemplate(filepath, scope.opts.root)\n    scope.push(hash)\n    const html = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    scope.blocks = originBlocks\n    scope.blockMode = originBlockMode\n    return html\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope, AssignScope, DecrementScope } from 'src/scope/scopes'\nimport TagToken from 'src/parser/tag-token'\nimport Scope from 'src/scope/scope'\n\nexport default {\n  parse: function (token: TagToken) {\n    const match = token.args.match(identifier)\n    assert(match, `illegal identifier ${token.args}`)\n    this.variable = match[0]\n  },\n  render: function (scope: Scope) {\n    let context = scope.findContextFor(\n      this.variable,\n      ctx => {\n        return !(ctx instanceof CaptureScope) && !(ctx instanceof AssignScope)\n      }\n    )\n    if (!context) {\n      context = new DecrementScope()\n      scope.unshift(context)\n    }\n    if (typeof context[this.variable] !== 'number') {\n      context[this.variable] = 0\n    }\n    return --context[this.variable]\n  }\n}\n","import assert from 'src/util/assert'\nimport { value as rValue } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\n\nconst groupRE = new RegExp(`^(?:(${rValue.source})\\\\s*:\\\\s*)?(.*)$`)\nconst candidatesRE = new RegExp(rValue.source, 'g')\n\nexport default {\n  parse: function (tagToken) {\n    let match = groupRE.exec(tagToken.args)\n    assert(match, `illegal tag: ${tagToken.raw}`)\n\n    this.group = match[1] || ''\n    const candidates = match[2]\n\n    this.candidates = []\n\n    while ((match = candidatesRE.exec(candidates))) {\n      this.candidates.push(match[0])\n    }\n    assert(this.candidates.length, `empty candidates: ${tagToken.raw}`)\n  },\n\n  render: function (scope) {\n    const group = evalValue(this.group, scope)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n\n    const groups = scope.opts.groups = scope.opts.groups || {}\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n\n    return evalValue(candidate, scope)\n  }\n}\n","import { evalExp, isTruthy } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: tagToken.args,\n        templates: (p = [])\n      }))\n      .on('tag:elsif', token => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    for (const branch of this.branches) {\n      const cond = evalExp(branch.cond, scope)\n      if (isTruthy(cond)) {\n        return this.liquid.renderer.renderTemplates(branch.templates, scope)\n      }\n    }\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope, AssignScope, IncrementScope } from 'src/scope/scopes'\n\nexport default {\n  parse: function (token) {\n    const match = token.args.match(identifier)\n    assert(match, `illegal identifier ${token.args}`)\n    this.variable = match[0]\n  },\n  render: function (scope) {\n    let context = scope.findContextFor(\n      this.variable,\n      ctx => {\n        return !(ctx instanceof CaptureScope) && !(ctx instanceof AssignScope)\n      }\n    )\n    if (!context) {\n      context = new IncrementScope()\n      scope.unshift(context)\n    }\n    if (typeof context[this.variable] !== 'number') {\n      context[this.variable] = 0\n    }\n    const val = context[this.variable]\n    context[this.variable]++\n    return val\n  }\n}\n","import assert from 'src/util/assert'\nimport { value as rValue } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /\\S+/\n\nexport default {\n  parse: function (token, remainTokens) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticLayout = match[0]\n    }\n\n    match = rValue.exec(token.args)\n    if (match) {\n      this.layout = match[0]\n    }\n\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: async function (scope, hash) {\n    const layout = scope.opts.dynamicPartials\n      ? evalValue(this.layout, scope)\n      : this.staticLayout\n    assert(layout, `cannot apply layout with empty filename`)\n\n    // render the remaining tokens immediately\n    scope.blockMode = BlockMode.STORE\n    const html = await this.liquid.renderer.renderTemplates(this.tpls, scope)\n    if (scope.blocks[''] === undefined) {\n      scope.blocks[''] = html\n    }\n    const templates = await this.liquid.getTemplate(layout, scope.opts.root)\n    scope.push(hash)\n    scope.blockMode = BlockMode.OUTPUT\n    const partial = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    return partial\n  }\n}\n","import BlockMode from 'src/scope/block-mode'\n\nexport default {\n  parse: function (token, remainTokens) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n\n    this.tpls = []\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', tpl => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: async function (scope) {\n    const childDefined = scope.blocks[this.block]\n    const html = childDefined !== undefined\n      ? childDefined\n      : await this.liquid.renderer.renderTemplates(this.tpls, scope)\n\n    if (scope.blockMode === BlockMode.STORE) {\n      scope.blocks[this.block] = html\n      return ''\n    }\n    return html\n  }\n}\n","export default {\n  parse: function (tagToken, remainTokens) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', token => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map(token => token.raw).join('')\n  }\n}\n","import { mapSeries } from 'src/util/promise'\nimport assert from 'src/util/assert'\nimport { evalExp } from 'src/render/syntax'\nimport { identifier, value, hash } from 'src/parser/lexical'\n\nconst re = new RegExp(`^(${identifier.source})\\\\s+in\\\\s+` +\n  `(${value.source})` +\n  `(?:\\\\s+${hash.source})*$`)\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    const match = re.exec(tagToken.args)\n    assert(match, `illegal tag: ${tagToken.raw}`)\n\n    this.variable = match[1]\n    this.collection = match[2]\n    this.templates = []\n\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: async function (scope, hash) {\n    let collection = evalExp(this.collection, scope) || []\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n    const contexts = collection.map(item => {\n      const ctx = {}\n      ctx[this.variable] = item\n      return ctx\n    })\n\n    let row\n    let html = ''\n    await mapSeries(contexts, async (context, idx) => {\n      row = Math.floor(idx / cols) + 1\n      const col = (idx % cols) + 1\n      if (col === 1) {\n        if (row !== 1) {\n          html += '</tr>'\n        }\n        html += `<tr class=\"row${row}\">`\n      }\n\n      html += `<td class=\"col${col}\">`\n      scope.push(context)\n      html += await this.liquid.renderer.renderTemplates(this.templates, scope)\n      html += '</td>'\n      scope.pop(context)\n      return html\n    })\n    if (row > 0) {\n      html += '</tr>'\n    }\n    return html\n  }\n}\n","import { evalExp, isFalsy } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.templates = []\n    this.elseTemplates = []\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = tagToken.args\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    const cond = evalExp(this.cond, scope)\n    return isFalsy(cond)\n      ? this.liquid.renderer.renderTemplates(this.templates, scope)\n      : this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","import { RenderBreakError } from 'src/util/error'\n\nexport default {\n  render: async function () {\n    throw new RenderBreakError('break')\n  }\n}\n","import { RenderBreakError } from 'src/util/error'\n\nexport default {\n  render: async function () {\n    throw new RenderBreakError('continue')\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport section from './section'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport ITagImplOptions from 'src/template/tag/itag-impl-options'\n\nconst tags: { [key: string]: ITagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, section, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","const escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nfunction escape (str) {\n  return String(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport default {\n  'escape': escape,\n  'escape_once': str => escape(unescape(str)),\n  'newline_to_br': v => v.replace(/\\n/g, '<br />'),\n  'strip_html': v => String(v).replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","export default {\n  'append': (v, arg) => v + arg,\n  'prepend': (v, arg) => arg + v,\n  'capitalize': str => String(str).charAt(0).toUpperCase() + str.slice(1),\n  'concat': (v, arg) => Array.prototype.concat.call(v, arg),\n  'lstrip': v => String(v).replace(/^\\s+/, ''),\n  'downcase': v => v.toLowerCase(),\n  'upcase': str => String(str).toUpperCase(),\n  'remove': (v, arg) => v.split(arg).join(''),\n  'remove_first': (v, l) => v.replace(l, ''),\n  'replace': (v, pattern, replacement) =>\n    String(v).split(pattern).join(replacement),\n  'replace_first': (v, arg1, arg2) => String(v).replace(arg1, arg2),\n  'rstrip': str => String(str).replace(/\\s+$/, ''),\n  'split': (v, arg) => String(v).split(arg),\n  'strip': (v) => String(v).trim(),\n  'strip_newlines': v => String(v).replace(/\\n/g, ''),\n  'truncate': (v, l, o) => {\n    v = String(v)\n    o = (o === undefined) ? '...' : o\n    l = l || 16\n    if (v.length <= l) return v\n    return v.substr(0, l - o.length) + o\n  },\n  'truncatewords': (v, l, o) => {\n    if (o === undefined) o = '...'\n    const arr = v.split(' ')\n    let ret = arr.slice(0, l).join(' ')\n    if (arr.length > l) ret += o\n    return ret\n  }\n}\n","export default {\n  'abs': v => Math.abs(v),\n  'ceil': v => Math.ceil(v),\n  'divided_by': (v, arg) => v / arg,\n  'floor': v => Math.floor(v),\n  'minus': bindFixed((v, arg) => v - arg),\n  'modulo': bindFixed((v, arg) => v % arg),\n  'round': (v, arg) => {\n    const amp = Math.pow(10, arg || 0)\n    return Math.round(v * amp) / amp\n  },\n  'plus': bindFixed((v, arg) => Number(v) + Number(arg)),\n  'times': (v, arg) => v * arg\n}\n\nfunction getFixed (v) {\n  const p = String(v).split('.')\n  return (p.length > 1) ? p[1].length : 0\n}\n\nfunction bindFixed (cb) {\n  return (l, r) => {\n    const f = Math.max(getFixed(l), getFixed(r))\n    return cb(l, r).toFixed(f)\n  }\n}\n","export default {\n  'url_decode': x => x.split('+').map(decodeURIComponent).join(' '),\n  'url_encode': x => x.split(' ').map(encodeURIComponent).join('+')\n}\n","import { last } from 'src/util/underscore'\n\nexport default {\n  'join': (v, arg) => v.join(arg === undefined ? ' ' : arg),\n  'last': v => last(v),\n  'first': v => v[0],\n  'map': (arr, arg) => arr.map(v => v[arg]),\n  'reverse': v => v.reverse(),\n  'sort': (v, arg) => v.sort(arg),\n  'size': v => v.length,\n  'slice': (v, begin, length) => {\n    if (length === undefined) length = 1\n    return v.slice(begin, begin + length)\n  },\n  'uniq': function (arr) {\n    const u = {}\n    return (arr || []).filter(val => {\n      if (u.hasOwnProperty(val)) {\n        return false\n      }\n      u[val] = true\n      return true\n    })\n  }\n}\n","import { padStart } from './underscore'\n\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\n\nfunction abbr (str) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nconst _date = {\n  daysInMonth: function (d) {\n    const feb = _date.isLeapYear(d) ? 29 : 28\n    return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  },\n\n  getDayOfYear: function (d) {\n    let num = 0\n    for (let i = 0; i < d.getMonth(); ++i) {\n      num += _date.daysInMonth(d)[i]\n    }\n    return num + d.getDate()\n  },\n\n  // Startday is an integer of which day to start the week measuring from\n  // TODO: that comment was retarted. fix it.\n  getWeekOfYear: function (d, startDay) {\n    // Skip to startDay of this week\n    const now = this.getDayOfYear(d) + (startDay - d.getDay())\n    // Find the first startDay of the year\n    const jan1 = new Date(d.getFullYear(), 0, 1)\n    const then = (7 - jan1.getDay() + startDay)\n    return padStart(String(Math.floor((now - then) / 7) + 1), 2, '0')\n  },\n\n  isLeapYear: function (d) {\n    const year = d.getFullYear()\n    return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n  },\n\n  getSuffix: function (d) {\n    const str = d.getDate().toString()\n    const index = parseInt(str.slice(-1))\n    return suffixes[index] || suffixes['default']\n  },\n\n  century: function (d) {\n    return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n  }\n}\n\nconst formatCodes = {\n  a: function (d) {\n    return dayNamesShort[d.getDay()]\n  },\n  A: function (d) {\n    return dayNames[d.getDay()]\n  },\n  b: function (d) {\n    return monthNamesShort[d.getMonth()]\n  },\n  B: function (d) {\n    return monthNames[d.getMonth()]\n  },\n  c: function (d) {\n    return d.toLocaleString()\n  },\n  C: function (d) {\n    return _date.century(d)\n  },\n  d: function (d) {\n    return padStart(d.getDate(), 2, '0')\n  },\n  e: function (d) {\n    return padStart(d.getDate(), 2)\n  },\n  H: function (d) {\n    return padStart(d.getHours(), 2, '0')\n  },\n  I: function (d) {\n    return padStart(String(d.getHours() % 12 || 12), 2, '0')\n  },\n  j: function (d) {\n    return padStart(_date.getDayOfYear(d), 3, '0')\n  },\n  k: function (d) {\n    return padStart(d.getHours(), 2)\n  },\n  l: function (d) {\n    return padStart(String(d.getHours() % 12 || 12), 2)\n  },\n  L: function (d) {\n    return padStart(d.getMilliseconds(), 3, '0')\n  },\n  m: function (d) {\n    return padStart(d.getMonth() + 1, 2, '0')\n  },\n  M: function (d) {\n    return padStart(d.getMinutes(), 2, '0')\n  },\n  p: function (d) {\n    return (d.getHours() < 12 ? 'AM' : 'PM')\n  },\n  P: function (d) {\n    return (d.getHours() < 12 ? 'am' : 'pm')\n  },\n  q: function (d) {\n    return _date.getSuffix(d)\n  },\n  s: function (d) {\n    return Math.round(d.valueOf() / 1000)\n  },\n  S: function (d) {\n    return padStart(d.getSeconds(), 2, '0')\n  },\n  u: function (d) {\n    return d.getDay() || 7\n  },\n  U: function (d) {\n    return _date.getWeekOfYear(d, 0)\n  },\n  w: function (d) {\n    return d.getDay()\n  },\n  W: function (d) {\n    return _date.getWeekOfYear(d, 1)\n  },\n  x: function (d) {\n    return d.toLocaleDateString()\n  },\n  X: function (d) {\n    return d.toLocaleTimeString()\n  },\n  y: function (d) {\n    return d.getFullYear().toString().substring(2, 4)\n  },\n  Y: function (d) {\n    return d.getFullYear()\n  },\n  z: function (d) {\n    const tz = d.getTimezoneOffset() / 60 * 100\n    return (tz > 0 ? '-' : '+') + padStart(String(Math.abs(tz)), 4, '0')\n  },\n  '%': function () {\n    return '%'\n  }\n};\n(formatCodes as any).h = formatCodes.b;\n(formatCodes as any).N = formatCodes.L\n\nexport default function (d, format) {\n  let output = ''\n  let remaining = format\n\n  while (true) {\n    const r = /%./g\n    const results = r.exec(remaining)\n\n    // No more format codes. Add the remaining text and return\n    if (!results) {\n      return output + remaining\n    }\n\n    // Add the preceding text\n    output += remaining.slice(0, r.lastIndex - 2)\n    remaining = remaining.slice(r.lastIndex)\n\n    // Add the format code\n    const ch = results[0].charAt(1)\n    const func = formatCodes[ch]\n    output += func ? func.call(this, d) : '%' + ch\n  }\n}\n","import strftime from 'src/util/strftime'\nimport { isString } from 'src/util/underscore'\n\nexport default {\n  'date': (v, arg) => {\n    let date = v\n    if (v === 'now') {\n      date = new Date()\n    } else if (isString(v)) {\n      date = new Date(v)\n    }\n    return isValidDate(date) ? strftime(date, arg) : v\n  }\n}\n\nfunction isValidDate (date) {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isTruthy } from 'src/render/syntax'\n\nexport default {\n  'default': (v, arg) => isTruthy(v) ? v : arg\n}\n","import { assign } from 'src/util/underscore'\nimport html from './html'\nimport str from './string'\nimport math from './math'\nimport url from './url'\nimport array from './array'\nimport date from './date'\nimport obj from './object'\n\nconst filters = assign({}, html, str, math, url, date, obj, array)\n\nexport default filters\n","import Scope from './scope/scope'\nimport * as Types from './types'\nimport * as template from 'template'\nimport * as _ from './util/underscore'\nimport ITemplate from './template/itemplate'\nimport Tokenizer from './parser/tokenizer'\nimport Render from './render/render'\nimport Tag from './template/tag/tag'\nimport Filter from './template/filter'\nimport Parser from './parser/parser'\nimport ITagImplOptions from './template/tag/itag-impl-options'\nimport Value from './template/value'\nimport { isTruthy, isFalsy, evalExp, evalValue } from './render/syntax'\nimport builtinTags from './builtin/tags'\nimport builtinFilters from './builtin/filters'\nimport { LiquidOptions, defaultOptions } from './liquid-options'\n\nexport default class Liquid {\n  public options: LiquidOptions\n  private cache: object\n  private parser: Parser\n  private renderer: Render\n  private tokenizer: Tokenizer\n\n  constructor (options: LiquidOptions = {}) {\n    options = _.assign({}, defaultOptions, options)\n    options.root = normalizeStringArray(options.root)\n\n    if (options.cache) {\n      this.cache = {}\n    }\n    this.options = options\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.tokenizer = new Tokenizer(this.options)\n\n    _.forOwn(builtinTags, (conf, name) => this.registerTag(name, conf))\n    _.forOwn(builtinFilters, (handler, name) => this.registerFilter(name, handler))\n  }\n  parse (html: string, filepath?: string) {\n    const tokens = this.tokenizer.tokenize(html, filepath)\n    return this.parser.parse(tokens)\n  }\n  render (tpl: Array<ITemplate>, ctx?: object, opts?: LiquidOptions) {\n    opts = _.assign({}, this.options, opts)\n    const scope = new Scope(ctx, opts)\n    return this.renderer.renderTemplates(tpl, scope)\n  }\n  async parseAndRender (html: string, ctx?: object, opts?: LiquidOptions) {\n    const tpl = await this.parse(html)\n    return this.render(tpl, ctx, opts)\n  }\n  async getTemplate (file, root) {\n    const filepath = await template.resolve(file, root, this.options)\n    return this.respectCache(filepath, async () => {\n      const str = await template.read(filepath)\n      return this.parse(str, filepath)\n    })\n  }\n  async renderFile (file, ctx?: object, opts?: LiquidOptions) {\n    opts = _.assign({}, opts)\n    const templates = await this.getTemplate(file, opts.root)\n    return this.render(templates, ctx, opts)\n  }\n  async respectCache (key, getter) {\n    const cacheEnabled = this.options.cache\n    if (cacheEnabled && this.cache[key]) {\n      return this.cache[key]\n    }\n    const value = await getter()\n    if (cacheEnabled) {\n      this.cache[key] = value\n    }\n    return value\n  }\n  evalValue (str: string, scope: Scope) {\n    return new Value(str, this.options.strict_filters).value(scope)\n  }\n  registerFilter (name, filter) {\n    return Filter.register(name, filter)\n  }\n  registerTag (name: string, tag: ITagImplOptions) {\n    return Tag.register(name, tag)\n  }\n  plugin (plugin) {\n    return plugin.call(this, Liquid)\n  }\n  express (opts: LiquidOptions = {}) {\n    const self = this\n    return function (filePath, ctx, cb) {\n      opts.root = this.root\n      self.renderFile(filePath, ctx, opts).then(html => cb(null, html), cb)\n    }\n  }\n  static default = Liquid\n  static isTruthy = isTruthy\n  static isFalsy = isFalsy\n  static evalExp = evalExp\n  static evalValue = evalValue\n  static Types = Types\n}\n\nfunction normalizeStringArray (value) {\n  if (_.isArray(value)) return value\n  if (_.isString(value)) return [value]\n  throw new TypeError('illegal root: ' + value)\n}\n"],"names":["range","tslib_1.__extends","_.create","_.assign","_\r\n        .range","_.padStart","BlockMode","_.last","_.isObject","_.isNil","_.isFunction","lexical.isInteger","_.isArray","_.isString","_.promisify","stat","readFile","path.extname","_.uniq","path.resolve","lexical.tagLine","operators","lexical.operators","lexical.quoteBalanced","lexical.rangeLine","lexical.isLiteral","lexical.parseLiteral","lexical.isVariable","lexical.value","lexical.filterLine","lexical.matchValue","lexical.filter","Value","HTML","re","staticFileRE","withRE","rValue","_.forOwn","builtinTags","builtinFilters","template.resolve","template.read"],"mappings":"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"}